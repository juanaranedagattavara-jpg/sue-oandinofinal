#!/usr/bin/env node

/**
 * Script para resetear completamente el servidor
 * Soluciona problemas de m√≥dulos faltantes y cach√© corrupta
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîÑ Reseteando servidor Sue√±o Andino...\n');

try {
  // 1. Detener todos los procesos Node.js
  console.log('1Ô∏è‚É£ Deteniendo procesos Node.js...');
  try {
    execSync('taskkill /f /im node.exe', { stdio: 'ignore' });
    console.log('‚úÖ Procesos Node.js detenidos');
  } catch (error) {
    console.log('‚ÑπÔ∏è  No hay procesos Node.js activos');
  }

  // 2. Limpiar cach√© de Next.js
  console.log('2Ô∏è‚É£ Limpiando cach√© de Next.js...');
  const nextDir = path.join(process.cwd(), '.next');
  if (fs.existsSync(nextDir)) {
    fs.rmSync(nextDir, { recursive: true, force: true });
    console.log('‚úÖ Cach√© de Next.js limpiada');
  } else {
    console.log('‚ÑπÔ∏è  No hay cach√© de Next.js');
  }

  // 3. Limpiar node_modules/.cache si existe
  console.log('3Ô∏è‚É£ Limpiando cach√© de node_modules...');
  const cacheDir = path.join(process.cwd(), 'node_modules', '.cache');
  if (fs.existsSync(cacheDir)) {
    fs.rmSync(cacheDir, { recursive: true, force: true });
    console.log('‚úÖ Cach√© de node_modules limpiada');
  }

  // 4. Verificar archivos cr√≠ticos
  console.log('4Ô∏è‚É£ Verificando archivos cr√≠ticos...');
  const criticalFiles = [
    'package.json',
    'next.config.js',
    'app/layout.tsx',
    'app/page.tsx'
  ];

  let allFilesExist = true;
  criticalFiles.forEach(file => {
    if (fs.existsSync(file)) {
      console.log(`‚úÖ ${file}`);
    } else {
      console.log(`‚ùå ${file} - FALTANTE`);
      allFilesExist = false;
    }
  });

  if (!allFilesExist) {
    console.log('\n‚ùå Archivos cr√≠ticos faltantes. Revisa la estructura del proyecto.');
    process.exit(1);
  }

  // 5. Ejecutar diagn√≥stico
  console.log('5Ô∏è‚É£ Ejecutando diagn√≥stico...');
  try {
    execSync('npm run diagnose', { stdio: 'inherit' });
  } catch (error) {
    console.log('‚ö†Ô∏è  Diagn√≥stico fall√≥, pero continuando...');
  }

  console.log('\nüéâ Reset del servidor completado');
  console.log('üí° Ahora ejecuta: npm run safe-dev');

} catch (error) {
  console.error('‚ùå Error durante el reset:', error.message);
  process.exit(1);
}
